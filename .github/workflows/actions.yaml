name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: my-cluster    # Replace with your GKE cluster name
  GKE_ZONE: us-east1-c    # Replace with your GKE cluster zone
  DEPLOYMENT_NAME: insurance-agent-deployment # The name from your deploy.yaml
  IMAGE: insurance-ai-agent # The name for your container image

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate with Google Cloud
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.GKE_ZONE }}-docker.pkg.dev

    - name: Build Docker image
      run: |-
        docker build \
          --tag "${{ env.GKE_ZONE }}-docker.pkg.dev/$PROJECT_ID/insurance-agent-repo/$IMAGE:$GITHUB_SHA" \
          .

    - name: Push Docker image to Artifact Registry
      run: docker push "${{ env.GKE_ZONE }}-docker.pkg.dev/$PROJECT_ID/insurance-agent-repo/$IMAGE:$GITHUB_SHA"

    - name: Get GKE credentials
      id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Create Kubernetes Secrets
      run: |
        kubectl create secret generic api-keys \
          --from-literal=OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }} \
          --from-literal=MEM0_API_KEY=${{ secrets.MEM0_API_KEY }} \
          --from-literal=VAPI_API_KEY=${{ secrets.VAPI_API_KEY }} \
          --from-literal=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to GKE
      run: |
        kubectl set image deployment/$DEPLOYMENT_NAME insurance-agent="${{ env.GKE_ZONE }}-docker.pkg.dev/$PROJECT_ID/insurance-agent-repo/$IMAGE:$GITHUB_SHA"
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        echo "Deployment successful! You can view the service with 'kubectl get services -o wide'"